[gd_scene load_steps=4 format=3 uid="uid://bpyilnem5y0pt"]

[ext_resource type="PackedScene" uid="uid://vgqxk8eyd1j1" path="res://Cube Player/Cube PlatJumper Player 2.0.tscn" id="2_etp1k"]

[sub_resource type="GDScript" id="GDScript_1j082"]
script/source = "extends CharacterBody3D

# Export variables to be editable in the Godot editor
@export var Speed : int = 14
@export var FallAcceleration : int = 75
@export var JumpForce : int = 20

# Private variable to track if the player is jumping
var _isJumping : bool = false

# Target velocity for movement
var _targetVelocity : Vector3 = Vector3.ZERO

# Called every frame, use delta for frame-independent movement
func _physics_process(delta: float) -> void:
	var direction : Vector3 = Vector3.ZERO

	# Handling horizontal movement
	if Input.is_action_pressed(\"move_right\"):
		direction.x += 1.0
	if Input.is_action_pressed(\"move_left\"):
		direction.x -= 1.0
	if Input.is_action_pressed(\"move_backward\"):
		direction.z += 1.0
	if Input.is_action_pressed(\"move_forward\"):
		direction.z -= 1.0

	# Normalize direction and update rotation if moving
	if direction != Vector3.ZERO:
		direction = direction.normalized()
		$Pivot.look_at(transform.origin + direction)  # Look at the direction the player is moving


	# Update horizontal velocity
	_targetVelocity.x = direction.x * Speed
	_targetVelocity.z = direction.z * Speed

	# Jumping and gravity logic
	if is_on_floor():  # If on the ground
		if _isJumping:  # If the player was jumping, reset to normal state
			_isJumping = false

		# Reset vertical velocity if on the ground (not jumping)
		_targetVelocity.y = 0

		# Check for jump input
		if Input.is_action_just_pressed(\"jump\"):  # When the jump button is pressed
			_targetVelocity.y = JumpForce  # Apply the jump force
			_isJumping = true  # Mark that the player is jumping
	else:  # If in the air (falling)
		# Apply gravity
		_targetVelocity.y -= FallAcceleration * delta

	# Moving the character
	velocity = _targetVelocity
	move_and_slide()
"

[sub_resource type="BoxShape3D" id="BoxShape3D_xx0uw"]
size = Vector3(1, 3, 1)

[node name="Level2" type="Node3D"]

[node name="Player-E" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -44, 17, -65)
collision_mask = 15
script = SubResource("GDScript_1j082")

[node name="CameraPivot2" type="Marker3D" parent="Player-E"]
transform = Transform3D(20, 0, 0, 0, 19.3185, 5.17638, 0, -5.17638, 19.3185, 0, 14, 6)

[node name="CameraMain" type="Camera3D" parent="Player-E/CameraPivot2"]
transform = Transform3D(0.05, 5.65667e-10, 2.1111e-09, -1.54543e-09, 0.0433013, 0.025, -1.54543e-09, -0.025, 0.0433013, 0.05, -0.212132, -0.122474)
fov = 71.2798

[node name="Pivot" type="Node3D" parent="Player-E"]

[node name="Cube PlatJumper Player 2_0" parent="Player-E/Pivot" instance=ExtResource("2_etp1k")]
transform = Transform3D(2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0)

[node name="CollisionShape3D2" type="CollisionShape3D" parent="Player-E"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("BoxShape3D_xx0uw")
